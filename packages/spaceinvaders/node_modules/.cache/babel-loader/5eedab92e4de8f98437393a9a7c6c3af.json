{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { apiFetch } from '../utils/apiFetch';\n\nfunction reducer(state, action) {\n  // console.log('CARS REDUCER', action.type, action)\n  switch (action.type) {\n    case 'FETCHING_PLAYERS':\n      return { ...state\n      };\n\n    case 'SET_PLAYERS':\n      return { ...state,\n        players: action.payload\n      };\n\n    case 'ADD_PLAYER':\n      return { ...state,\n        players: action.payload\n      };\n\n    case 'DELETE_PLAYER':\n      return { ...state,\n        players: state.players.filter(player => player !== action.payload)\n      };\n  }\n} // cars : state.cars.filter(c => (c !== action.payload))}\n\n\nexport function usePlayer() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    players: null\n  });\n  return {\n    players: state.players,\n    // score : state.score,\n    addPlayer: async function (data) {\n      // console.log('player dans le hook', data)\n      const player = await apiFetch('/players', {\n        method: 'post',\n        body: data\n      }); // console.log('state.name', state.players)\n      // console.log('state : ', state)\n\n      dispatch({\n        type: 'ADD_PLAYER',\n        payload: player\n      });\n    },\n    fetchPlayers: async function () {\n      // const players = await apiFetch('/players')\n      const players = await apiFetch('/players');\n      console.log('players', players);\n      dispatch({\n        type: 'FETCHING_PLAYERS'\n      }); // const players = await apiFetch('/players')\n\n      dispatch({\n        type: 'SET_PLAYERS',\n        payload: players\n      });\n    },\n    deletePlayer: async function (worstPlayer) {\n      await apiFetch('/players/' + worstPlayer._id, {\n        method: 'DELETE'\n      });\n      dispatch({\n        type: 'DELETE_PLAYER',\n        payload: worstPlayer\n      });\n    }\n  };\n} // dispatch({type : 'FETCHING_CARS'})\n// const cars = await apiFetch('/cars')\n// dispatch({type : 'SET_CARS', payload : cars})\n\n_s(usePlayer, \"f/IXDcsFOYkRUpmGFp28XooIJ8M=\");","map":{"version":3,"sources":["C:/Users/regol/Documents/REACT/INVADERS/Invaders-monorepo/packages/spaceinvaders/src/hooks/players.js"],"names":["React","useReducer","apiFetch","reducer","state","action","type","players","payload","filter","player","usePlayer","dispatch","addPlayer","data","method","body","fetchPlayers","console","log","deletePlayer","worstPlayer","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAgC;AAC5B;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGF;AAAJ,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO,EAAC,GAAGA,KAAJ;AAAWG,QAAAA,OAAO,EAAGF,MAAM,CAACG;AAA5B,OAAP;;AAEJ,SAAK,YAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAA3B,OAAP;;AAEJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWG,QAAAA,OAAO,EAAGH,KAAK,CAACG,OAAN,CAAcE,MAAd,CAAqBC,MAAM,IAAKA,MAAM,KAAKL,MAAM,CAACG,OAAlD;AAArB,OAAP;AAXR;AAaH,C,CACD;;;AAIA,OAAO,SAASG,SAAT,GAAoB;AAAA;;AACvB,QAAK,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,OAAD,EAAU;AACzCI,IAAAA,OAAO,EAAG;AAD+B,GAAV,CAAnC;AAKA,SAAO;AAEHA,IAAAA,OAAO,EAAGH,KAAK,CAACG,OAFb;AAGH;AAEAM,IAAAA,SAAS,EAAG,gBAAeC,IAAf,EAAoB;AAC5B;AACA,YAAMJ,MAAM,GAAG,MAAMR,QAAQ,CAAC,UAAD,EAAa;AACtCa,QAAAA,MAAM,EAAG,MAD6B;AAEtCC,QAAAA,IAAI,EAAGF;AAF+B,OAAb,CAA7B,CAF4B,CAM5B;AACA;;AACAF,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAAG,YAAR;AAAsBE,QAAAA,OAAO,EAAGE;AAAhC,OAAD,CAAR;AAGH,KAhBE;AAiBHO,IAAAA,YAAY,EAAG,kBAAiB;AACxB;AACA,YAAMV,OAAO,GAAG,MAAML,QAAQ,CAAC,UAAD,CAA9B;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAwBZ,OAAxB;AACAK,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAAG;AAAR,OAAD,CAAR,CAJwB,CAKxB;;AACAM,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAAG,aAAR;AAAuBE,QAAAA,OAAO,EAAGD;AAAjC,OAAD,CAAR;AAGP,KA1BE;AA2BHa,IAAAA,YAAY,EAAG,gBAAeC,WAAf,EAA2B;AACtC,YAAMnB,QAAQ,CAAC,cAAcmB,WAAW,CAACC,GAA3B,EAA+B;AACzCP,QAAAA,MAAM,EAAG;AADgC,OAA/B,CAAd;AAGAH,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAAG,eAAR;AAAyBE,QAAAA,OAAO,EAAGa;AAAnC,OAAD,CAAR;AAEH;AAjCE,GAAP;AAoCH,C,CAED;AACA;AACA;;GA9CgBV,S","sourcesContent":["import React, { useReducer } from 'react'\r\nimport { apiFetch } from '../utils/apiFetch'\r\n\r\nfunction reducer (state, action){\r\n    // console.log('CARS REDUCER', action.type, action)\r\n    switch(action.type){\r\n        case 'FETCHING_PLAYERS' :\r\n            return {...state}\r\n\r\n        case 'SET_PLAYERS' : \r\n            return {...state, players : action.payload }\r\n\r\n        case 'ADD_PLAYER':\r\n            return {...state, players: action.payload}\r\n        \r\n        case 'DELETE_PLAYER' :\r\n            return {...state, players : state.players.filter(player => (player !== action.payload)) }\r\n    }\r\n}\r\n// cars : state.cars.filter(c => (c !== action.payload))}\r\n\r\n\r\n\r\nexport function usePlayer(){\r\n    const[state, dispatch] = useReducer(reducer, {\r\n        players : null,\r\n        \r\n    })\r\n\r\n    return {\r\n        \r\n        players : state.players,\r\n        // score : state.score,\r\n        \r\n        addPlayer : async function(data){\r\n            // console.log('player dans le hook', data)\r\n            const player = await apiFetch('/players', {\r\n                method : 'post',\r\n                body : data\r\n            })\r\n            // console.log('state.name', state.players)\r\n            // console.log('state : ', state)\r\n            dispatch({type : 'ADD_PLAYER', payload : player})\r\n\r\n        \r\n        },\r\n        fetchPlayers : async function (){\r\n                // const players = await apiFetch('/players')\r\n                const players = await apiFetch('/players')\r\n                console.log( 'players', players)\r\n                dispatch({type : 'FETCHING_PLAYERS'})\r\n                // const players = await apiFetch('/players')\r\n                dispatch({type : 'SET_PLAYERS', payload : players})\r\n\r\n            \r\n        },\r\n        deletePlayer : async function(worstPlayer){\r\n            await apiFetch('/players/' + worstPlayer._id,{\r\n                method : 'DELETE'\r\n            })\r\n            dispatch({type : 'DELETE_PLAYER', payload : worstPlayer}) \r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// dispatch({type : 'FETCHING_CARS'})\r\n// const cars = await apiFetch('/cars')\r\n// dispatch({type : 'SET_CARS', payload : cars})\r\n"]},"metadata":{},"sourceType":"module"}