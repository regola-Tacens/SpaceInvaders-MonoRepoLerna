{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\regol\\\\Documents\\\\REACT\\\\INVADERS\\\\Invaders-monorepo\\\\packages\\\\spaceinvaders\\\\src\\\\gameElements\\\\Background.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Background() {\n  _s();\n\n  const starRef = useRef();\n  const [starsOnScreen, setStar] = useState([]);\n  const [togglerCreateStars, setToggleCreateStars] = useState(false);\n  const timing = useRef(); // let timing\n\n  class Stars extends Component {\n    constructor(left) {\n      super(left);\n      this.bottom = -10;\n      this.left = Math.floor(Math.random() * 600);\n      this.visual = document.createElement(\"div\");\n      const visual = this.visual;\n      visual.classList.add('star');\n      visual.style.left = this.left + 'px';\n      visual.style.bottom = this.bottom + 'px';\n      const starDiv = starRef.current;\n      starDiv.appendChild(visual);\n    }\n\n  }\n\n  const createStars = function (numStars) {\n    for (let i = 0; i < numStars; i++) {\n      let newStar = new Stars();\n      setStar(starsOnScreen => [...starsOnScreen, newStar]);\n    }\n  };\n\n  const toggleSetOfStars = function () {\n    // console.log('togglerCreateStars', togglerCreateStars)\n    setToggleCreateStars(togglerCreateStars => !togglerCreateStars);\n  };\n\n  useEffect(() => {\n    // console.log('ok cerate stars')\n    createStars(1);\n  }, [togglerCreateStars]);\n  useEffect(() => {\n    let createAlienTimer = setInterval(toggleSetOfStars, 120);\n    return () => clearInterval(createAlienTimer);\n  }, []);\n\n  const moveStars = function () {\n    starsOnScreen.forEach(star => {\n      let visual = star.visual.style;\n      star.bottom -= 2;\n      visual.bottom = star.bottom + 'px';\n\n      if (star.bottom < -600) {\n        star.visual.classList.remove('star');\n        starsOnScreen.splice(starsOnScreen.indexOf(star), 1);\n      }\n    });\n  };\n\n  useEffect(() => {\n    timing.current = setInterval(moveStars, 10);\n    return () => clearInterval(timing.current);\n  }, [createStars]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: starRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Background, \"sQeQcc3R1GsXQLwKN+3JwT1PS7I=\");\n\n_c = Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["C:/Users/regol/Documents/REACT/INVADERS/Invaders-monorepo/packages/spaceinvaders/src/gameElements/Background.jsx"],"names":["React","useRef","Component","useEffect","useState","Background","starRef","starsOnScreen","setStar","togglerCreateStars","setToggleCreateStars","timing","Stars","constructor","left","bottom","Math","floor","random","visual","document","createElement","classList","add","style","starDiv","current","appendChild","createStars","numStars","i","newStar","toggleSetOfStars","createAlienTimer","setInterval","clearInterval","moveStars","forEach","star","remove","splice","indexOf"],"mappings":"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","sourcesContent":["import React, { useRef, Component, useEffect, useState } from 'react'\r\n\r\nexport function Background (){\r\n    const starRef = useRef()\r\n    const [starsOnScreen, setStar] = useState([])\r\n    const [togglerCreateStars, setToggleCreateStars] = useState(false)\r\n    const timing = useRef()\r\n    // let timing\r\n    class Stars extends Component{\r\n\r\n        constructor (left){\r\n            super(left)\r\n            this.bottom = -10\r\n            this.left = Math.floor(Math.random()*600)\r\n            this.visual = document.createElement(\"div\")\r\n            const visual = this.visual\r\n            visual.classList.add('star')\r\n            visual.style.left = this.left + 'px'\r\n            visual.style.bottom = this.bottom +  'px'\r\n            \r\n            const starDiv = starRef.current\r\n            starDiv.appendChild(visual)            \r\n        }\r\n\r\n    }\r\n\r\n    const createStars = function(numStars){\r\n        for (let i=0; i<numStars;i++){            \r\n            let newStar = new Stars()\r\n            setStar(starsOnScreen => [...starsOnScreen, newStar])       \r\n        }\r\n    }\r\n\r\n    const toggleSetOfStars = function (){\r\n        // console.log('togglerCreateStars', togglerCreateStars)\r\n        setToggleCreateStars(togglerCreateStars => !togglerCreateStars)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // console.log('ok cerate stars')\r\n        createStars(1)\r\n    },[togglerCreateStars])\r\n\r\n    useEffect(()=>{\r\n        let createAlienTimer = setInterval(toggleSetOfStars,120)\r\n        return () => clearInterval(createAlienTimer);\r\n    },[])\r\n\r\n\r\n\r\n    const moveStars = function(){\r\n\r\n        starsOnScreen.forEach(star => {\r\n            \r\n            let visual = star.visual.style      \r\n            star.bottom -= 2\r\n            visual.bottom = star.bottom + 'px'\r\n            if(star.bottom <-600){\r\n                star.visual.classList.remove('star')\r\n                starsOnScreen.splice(starsOnScreen.indexOf(star),1)\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n        timing.current = setInterval(moveStars, 10)\r\n        \r\n        return () => clearInterval(timing.current);\r\n    },[createStars])\r\n\r\n    return <div ref={starRef} ></div>\r\n}"]},"metadata":{},"sourceType":"module"}