{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\regol\\\\Documents\\\\REACT\\\\INVADERS\\\\Invaders-monorepo\\\\packages\\\\spaceinvaders\\\\src\\\\MainGameContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Pad } from './gameElements/Pad';\nimport { LaserContainer } from './gameElements/laser'; // import {handleCreateLaser} from './gameElements/laser'\n\nimport { InvadersContainer } from './gameElements/Aliens';\nimport { Score } from './gameElements/Score';\nimport { Background } from './gameElements/Background';\nimport { Player } from './gameElements/Player';\nimport { usePlayer } from './hooks/players';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet rightTimerId;\nlet leftTimerId;\nlet isGoingRight = false;\nlet isGoingLeft = false;\nexport function MainGameContainer() {\n  _s();\n\n  const padRef = useRef(null);\n  const stepsToRight = useRef(0);\n  const [lasersOnScreen, setLasers] = useState([]);\n  const [invaders, setInvaders] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isGameOver, setGameOver] = useState(false); // const [player, setPlayer] = useState(null);\n\n  const {\n    players,\n    fetchPlayers,\n    deletePlayer,\n    addPlayer\n  } = usePlayer();\n  const [alienSpeed, setAlienSpeed] = useState(20);\n  useEffect(() => {\n    // console.log('ok render')\n    MovePadRight();\n  }, []);\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const control = function (e) {\n    if (e.key === 'ArrowLeft') {\n      MovePadLeft();\n    } else if (e.key === 'ArrowRight') {\n      console.log('going right with key');\n      MovePadRight();\n    } else if (e.key === 'ArrowUp') {\n      stopPad();\n    }\n  };\n\n  useEffect(() => {\n    console.log('add event listener for key control'); //add event listener\n\n    window.addEventListener('keyup', control); //remove on cleanUp\n\n    return () => {\n      window.removeEventListener('keyup', control);\n    };\n  }, []); // ------------DEPLACEMENT PAD -----------------//\n\n  const stopPad = function () {\n    // console.log('ok stop pad')\n    clearInterval(rightTimerId);\n    clearInterval(leftTimerId);\n    isGoingRight = false;\n    isGoingLeft = false;\n  };\n\n  const shoot = function () {\n    stopPad();\n  };\n\n  const MovePadRight = function () {\n    // console.log('move right',padRef.current.style.left)\n    isGoingLeft = false;\n    clearInterval(leftTimerId);\n\n    if (!isGoingRight) {\n      rightTimerId = setInterval(() => {\n        isGoingRight = true;\n        stepsToRight.current += 2;\n        padRef.current.style.left = stepsToRight.current + 'px'; // console.log(parseInt(padRef.current.style.left,10))\n\n        if (parseInt(padRef.current.style.left, 10) > 534) {\n          stopPad();\n        }\n      }, 10);\n    }\n  };\n\n  const MovePadLeft = function () {\n    // console.log('move left',padRef.current.style.left)\n    isGoingRight = false; // console.log('isGoingLeft : ', isGoingLeft)\n\n    clearInterval(rightTimerId);\n\n    if (!isGoingLeft) {\n      leftTimerId = setInterval(() => {\n        isGoingLeft = true;\n        stepsToRight.current -= 2;\n        padRef.current.style.left = stepsToRight.current + 'px'; // console.log(padRef.current.style.left)\n\n        if (parseInt(padRef.current.style.left, 10) <= 0) {\n          stopPad();\n        }\n      }, 10);\n    }\n  }; // ------------RENDER  -----------------//\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Score, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isGameOver ? /*#__PURE__*/_jsxDEV(Player, {\n        onSubmit: addPlayer,\n        deletePlayer: deletePlayer,\n        setScore: setScore,\n        score: score,\n        setGameOver: setGameOver,\n        players: players,\n        fetchPlayers: fetchPlayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InvadersContainer, {\n        alienSpeed: alienSpeed,\n        setAlienSpeed: setAlienSpeed,\n        padRef: padRef,\n        invaders: invaders,\n        setInvaders: setInvaders,\n        isGameOver: isGameOver,\n        setGameOver: setGameOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pad\",\n      children: /*#__PURE__*/_jsxDEV(LaserContainer, {\n        padRef: padRef,\n        setScore: setScore,\n        score: score,\n        invaders: invaders,\n        setLasers: setLasers,\n        lasersOnScreen: lasersOnScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pad\",\n      children: /*#__PURE__*/_jsxDEV(Pad, {\n        padRef: padRef,\n        onRightClick: MovePadRight,\n        onLeftClick: MovePadLeft,\n        onMouseOver: shoot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animatedBackground\",\n      children: /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MainGameContainer, \"ZzSk082qJBT2mahipG7I5JAn+qA=\", false, function () {\n  return [usePlayer];\n});\n\n_c = MainGameContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainGameContainer\");","map":{"version":3,"sources":["C:/Users/regol/Documents/REACT/INVADERS/Invaders-monorepo/packages/spaceinvaders/src/MainGameContainer.jsx"],"names":["React","useEffect","useRef","useState","Pad","LaserContainer","InvadersContainer","Score","Background","Player","usePlayer","rightTimerId","leftTimerId","isGoingRight","isGoingLeft","MainGameContainer","padRef","stepsToRight","lasersOnScreen","setLasers","invaders","setInvaders","score","setScore","isGameOver","setGameOver","players","fetchPlayers","deletePlayer","addPlayer","alienSpeed","setAlienSpeed","MovePadRight","control","e","key","MovePadLeft","console","log","stopPad","window","addEventListener","removeEventListener","clearInterval","shoot","setInterval","current","style","left","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState} from 'react';\r\nimport { Pad } from './gameElements/Pad';\r\nimport {LaserContainer} from './gameElements/laser'\r\n// import {handleCreateLaser} from './gameElements/laser'\r\nimport {InvadersContainer} from './gameElements/Aliens'\r\nimport { Score } from './gameElements/Score';\r\nimport { Background } from './gameElements/Background';\r\nimport { Player } from './gameElements/Player';\r\nimport { usePlayer } from './hooks/players';\r\n\r\n\r\nlet rightTimerId;\r\nlet leftTimerId;\r\nlet isGoingRight = false;\r\nlet isGoingLeft = false;\r\n\r\nexport function MainGameContainer (){\r\n    \r\n    const padRef = useRef(null);\r\n    const stepsToRight = useRef(0);\r\n    const [lasersOnScreen, setLasers] = useState([]);\r\n    const [invaders, setInvaders]  =useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const[isGameOver, setGameOver] = useState(false);\r\n    // const [player, setPlayer] = useState(null);\r\n    const {players, fetchPlayers, deletePlayer,addPlayer} = usePlayer()\r\n    const [alienSpeed, setAlienSpeed] = useState(20)\r\n    \r\n    useEffect(()=>{\r\n        // console.log('ok render')\r\n        MovePadRight()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetchPlayers()\r\n    },[])\r\n\r\n    const control = function (e){\r\n        if ( e.key ==='ArrowLeft'){\r\n            MovePadLeft()\r\n        } else if (e.key === 'ArrowRight'){\r\n            console.log('going right with key')\r\n            MovePadRight()\r\n        } \r\n        else if (e.key === 'ArrowUp'){\r\n            stopPad()\r\n        } \r\n    }\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        console.log('add event listener for key control')\r\n        //add event listener\r\n        window.addEventListener('keyup', control)\r\n\r\n        //remove on cleanUp\r\n        return ()=>{\r\n             window.removeEventListener('keyup', control)\r\n        }\r\n    },[])\r\n    \r\n\r\n    // ------------DEPLACEMENT PAD -----------------//\r\n\r\n    const stopPad = function (){\r\n        // console.log('ok stop pad')\r\n        clearInterval(rightTimerId)\r\n        clearInterval(leftTimerId)\r\n        isGoingRight = false;\r\n        isGoingLeft =false;\r\n    };\r\n\r\n\r\n    const shoot = function (){\r\n        stopPad()\r\n    }\r\n    \r\n    const MovePadRight = function(){ \r\n        // console.log('move right',padRef.current.style.left)\r\n            isGoingLeft=false;\r\n            clearInterval(leftTimerId)\r\n\r\n            if(!isGoingRight){\r\n                \r\n                rightTimerId = setInterval(()=>{\r\n                    isGoingRight = true;\r\n                    stepsToRight.current += 2;\r\n                    padRef.current.style.left = stepsToRight.current + 'px'\r\n                    // console.log(parseInt(padRef.current.style.left,10))\r\n                    if( parseInt(padRef.current.style.left,10) > 534){\r\n                        stopPad()\r\n                    }\r\n                \r\n                },10)\r\n            }\r\n    }\r\n\r\n    const MovePadLeft = function(){ \r\n        // console.log('move left',padRef.current.style.left)\r\n        isGoingRight = false;\r\n        // console.log('isGoingLeft : ', isGoingLeft)\r\n        clearInterval(rightTimerId)\r\n        if(!isGoingLeft){\r\n            leftTimerId = setInterval(()=>{\r\n                isGoingLeft = true;\r\n                \r\n                stepsToRight.current -= 2;\r\n                padRef.current.style.left = stepsToRight.current + 'px'\r\n                // console.log(padRef.current.style.left)\r\n                if( parseInt(padRef.current.style.left,10) <=0){\r\n                    stopPad()\r\n                }\r\n            \r\n            },10)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // ------------RENDER  -----------------//\r\n    return <>\r\n            <Score score={score}/>\r\n            \r\n            {/* <Route path = */}\r\n        <div>\r\n            { isGameOver ?<Player \r\n            onSubmit={addPlayer} \r\n            deletePlayer={deletePlayer} \r\n            setScore={setScore} \r\n            score={score} \r\n            setGameOver={setGameOver} \r\n            players={players} \r\n            fetchPlayers={fetchPlayers}/> : null}\r\n        </div>\r\n        <div>\r\n            <InvadersContainer \r\n            alienSpeed={alienSpeed}\r\n            setAlienSpeed={setAlienSpeed}\r\n            padRef={padRef} \r\n            invaders={invaders} \r\n            setInvaders={setInvaders}\r\n            isGameOver={isGameOver}\r\n            setGameOver={setGameOver}\r\n            />\r\n        </div>\r\n        <div id='pad'>\r\n            <LaserContainer \r\n            padRef={padRef} \r\n            setScore={setScore} \r\n            score={score} \r\n            invaders={invaders} \r\n            setLasers={setLasers} \r\n            lasersOnScreen={lasersOnScreen} \r\n             />\r\n        </div>\r\n        <div id='pad'>\r\n            <Pad \r\n            padRef={padRef} \r\n            onRightClick={MovePadRight} \r\n            onLeftClick={MovePadLeft} \r\n            onMouseOver={shoot}/>       \r\n        </div>\r\n        <div className='animatedBackground'>\r\n            <Background/>\r\n        </div>\r\n        </>\r\n}\r\n\r\n\r\n\r\n\r\n      \r\n"]},"metadata":{},"sourceType":"module"}