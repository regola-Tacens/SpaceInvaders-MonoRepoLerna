{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\regol\\\\Documents\\\\REACT\\\\INVADERS\\\\Invaders-monorepo\\\\packages\\\\spaceinvaders\\\\src\\\\gameElements\\\\laser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LaserContainer({\n  padRef,\n  setLasers,\n  score,\n  setScore,\n  lasersOnScreen,\n  invaders\n}) {\n  _s();\n\n  const laserRef = useRef(null);\n  useEffect(() => {\n    let timing = setInterval(moveLasers, 10);\n    return () => clearInterval(timing);\n  }, [lasersOnScreen]);\n\n  const shootControl = function (e) {\n    // console.log('yeah')\n    // console.log(e)\n    if (e.code === 'Space') {\n      console.log('spaceBar');\n      handleCreateLaser();\n    }\n  };\n\n  useEffect(() => {\n    // console.log('add event listener shooting')\n    //add event listener\n    window.addEventListener('keyup', shootControl); //remove on cleanUp\n\n    return () => {\n      // console.log('removed')\n      window.removeEventListener('keyup', shootControl);\n    };\n  });\n\n  class Laser extends Component {\n    constructor(padPosition) {\n      super(padPosition); // console.log(padPosition)\n\n      this.bottom = 90;\n      this.left = parseInt(padPosition, 10) + 30;\n      this.visual = document.createElement(\"div\");\n      const visual = this.visual;\n      visual.classList.add('laser');\n      visual.style.left = this.left + 'px';\n      visual.style.bottom = this.bottom + 'px';\n      const targetedDiv = laserRef.current;\n      targetedDiv.appendChild(visual);\n    }\n\n  }\n\n  const moveLasers = function () {\n    lasersOnScreen.forEach(laser => {\n      let visual = laser.visual.style;\n      laser.bottom += 3;\n      visual.bottom = laser.bottom + 'px'; // console.log(laser)\n      // console.log(invaders)\n\n      invaders.forEach(invader => {\n        // console.log(invaders.indexOf(invader))\n        let invIndex = invaders.indexOf(invader);\n        let lasIndex = lasersOnScreen.indexOf(laser);\n        let invLeft = invader.left;\n        let invBot = invader.bottom;\n        let lasLeft = laser.left;\n        let lasBot = laser.bottom;\n\n        if (lasLeft > invLeft - 1 && lasLeft < invLeft + 30 && lasBot > invBot - 5 && lasBot < invBot + 20) {\n          invader.visual.classList.remove('alien');\n          invaders.splice(invIndex, 1);\n          laser.visual.classList.remove('laser');\n          lasersOnScreen.splice(lasIndex, 1);\n          setScore(score => score + 1);\n        }\n      });\n\n      if (laser.bottom > 593) {\n        lasersOnScreen[0].visual.classList.remove('laser');\n        lasersOnScreen.splice(0, 1);\n      }\n    });\n  };\n\n  const handleCreateLaser = function () {\n    // console.log('lasersOnScree : ',lasersOnScreen)\n    let newLaser = new Laser(padRef.current.style.left);\n    setLasers(lasersOnScreen => [...lasersOnScreen, newLaser]); // lasersOnScreen[0].hello()\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: laserRef,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(LaserContainer, \"ThfaW8LPGpdI9yA+SM1gPnDsiXc=\");\n\n_c = LaserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LaserContainer\");","map":{"version":3,"sources":["C:/Users/regol/Documents/REACT/INVADERS/Invaders-monorepo/packages/spaceinvaders/src/gameElements/laser.jsx"],"names":["React","useRef","useEffect","Component","LaserContainer","padRef","setLasers","score","setScore","lasersOnScreen","invaders","laserRef","timing","setInterval","moveLasers","clearInterval","shootControl","e","code","console","log","handleCreateLaser","window","addEventListener","removeEventListener","Laser","constructor","padPosition","bottom","left","parseInt","visual","document","createElement","classList","add","style","targetedDiv","current","appendChild","forEach","laser","invader","invIndex","indexOf","lasIndex","invLeft","invBot","lasLeft","lasBot","remove","splice","newLaser"],"mappings":"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","sourcesContent":["import React , {useRef, useEffect, Component} from 'react'\r\n\r\n\r\nexport function LaserContainer ({padRef, setLasers, score, setScore, lasersOnScreen,invaders }){\r\n    const laserRef = useRef(null)\r\n  \r\n    useEffect(()=>{\r\n        let timing = setInterval(moveLasers, 10);\r\n        \r\n        return () => clearInterval(timing);\r\n    },[lasersOnScreen])\r\n\r\n    const shootControl = function (e){\r\n        // console.log('yeah')\r\n        // console.log(e)\r\n        if ( e.code ==='Space'){\r\n            console.log('spaceBar')\r\n            handleCreateLaser()\r\n        } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        // console.log('add event listener shooting')\r\n        //add event listener\r\n        window.addEventListener('keyup', shootControl)\r\n        \r\n\r\n        //remove on cleanUp\r\n        return ()=>{\r\n            // console.log('removed')\r\n             window.removeEventListener('keyup', shootControl)\r\n        }\r\n    })\r\n\r\n   \r\n\r\n \r\n\r\n    class Laser extends Component {\r\n        constructor (padPosition){\r\n            super(padPosition)\r\n            // console.log(padPosition)\r\n            this.bottom = 90\r\n            this.left = parseInt(padPosition,10) +30\r\n            this.visual = document.createElement(\"div\")\r\n            const visual = this.visual\r\n            visual.classList.add('laser')\r\n            visual.style.left = this.left + 'px'\r\n            visual.style.bottom = this.bottom + 'px'\r\n            const targetedDiv = laserRef.current\r\n            targetedDiv.appendChild(visual)\r\n        }\r\n    }\r\n\r\n     \r\n    const moveLasers = function (){  \r\n        \r\n        lasersOnScreen.forEach(laser => {\r\n            \r\n          \r\n            let visual = laser.visual.style\r\n            laser.bottom += 3\r\n            visual.bottom = laser.bottom + 'px'\r\n            // console.log(laser)\r\n            // console.log(invaders)\r\n            invaders.forEach(invader => {\r\n                // console.log(invaders.indexOf(invader))\r\n                let invIndex = invaders.indexOf(invader)\r\n                let lasIndex = lasersOnScreen.indexOf(laser)\r\n                let invLeft = invader.left\r\n                let invBot = invader.bottom\r\n                let lasLeft = laser.left\r\n                let lasBot = laser.bottom\r\n                \r\n                if((lasLeft > invLeft -1 && lasLeft < invLeft +30)&&\r\n                   ( lasBot > invBot -5 && lasBot < invBot +20)\r\n                    )\r\n                    {\r\n                        invader.visual.classList.remove('alien')\r\n                        invaders.splice(invIndex,1)\r\n                        laser.visual.classList.remove('laser')\r\n                        lasersOnScreen.splice(lasIndex,1)\r\n                        setScore(score => score + 1)\r\n                    }\r\n            });\r\n\r\n            if(laser.bottom > 593){\r\n                lasersOnScreen[0].visual.classList.remove('laser')\r\n                lasersOnScreen.splice(0,1)\r\n            }\r\n        })\r\n    }\r\n\r\n \r\n  \r\n\r\n\r\n    const handleCreateLaser = function (){\r\n        // console.log('lasersOnScree : ',lasersOnScreen)\r\n        let newLaser = new Laser(padRef.current.style.left)\r\n        setLasers(lasersOnScreen =>[...lasersOnScreen, newLaser])\r\n        \r\n        // lasersOnScreen[0].hello()\r\n        \r\n    }\r\n   \r\n    \r\n    return <>\r\n        {/* <button className='btn btn-outline-success btn-sm'  id='shootButton'\r\n                onClick={handleCreateLaser}>\r\n                    shoot\r\n        </button> */}\r\n    <div ref={laserRef}> </div>\r\n    </>\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}