{"version":3,"sources":["gameElements/Pad.jsx","gameElements/laser.jsx","gameElements/Aliens.jsx","gameElements/Score.jsx","gameElements/Background.jsx","gameElements/Player.jsx","MainGameContainer.jsx","utils/apiFetch.js","hooks/players.js","App.js","reportWebVitals.js","index.js"],"names":["Pad","padRef","onRightClick","onLeftClick","onMouseOver","ref","className","id","LaserContainer","setLasers","setScore","score","lasersOnScreen","invaders","laserRef","useRef","useEffect","timing","setInterval","moveLasers","clearInterval","shootControl","e","code","console","log","handleCreateLaser","window","addEventListener","removeEventListener","Laser","padPosition","bottom","left","parseInt","visual","document","createElement","classList","add","style","current","appendChild","Component","forEach","laser","invader","invIndex","indexOf","lasIndex","invLeft","invBot","lasLeft","lasBot","remove","splice","newLaser","InvadersContainer","setAlienSpeed","alienSpeed","isGameOver","setGameOver","setInvaders","useState","newSetOfAliens","setAliens","alienRef","count","direction","setDirection","aliens","alienType","createAliens","space","numAliens","startPosition","i","newInvader","speed","moveAliens","length","Score","Background","starRef","starsOnScreen","setStar","togglerCreateStars","setToggleCreateStars","Stars","Math","floor","random","createStars","numStars","newStar","toggleSetOfStars","createAlienTimer","moveStars","star","Player","onSubmit","deletePlayer","players","fetchPlayers","isNameSubmited","setIsNameSubmited","handleSubmit","a","preventDefault","form","target","data","Object","fromEntries","FormData","timer","insertScore","handleClick","htmlFor","type","name","htmltype","rightTimerId","leftTimerId","HallOfFame","class","map","player","onClick","ApiErrors","errors","this","apiFetch","endpoint","options","headers","Accept","body","JSON","stringify","fetch","response","status","json","responseData","ok","reducer","state","action","payload","filter","isGoingRight","isGoingLeft","MainGameContainer","stepsToRight","useReducer","dispatch","addPlayer","method","worstPlayer","_id","usePlayer","MovePadRight","control","key","MovePadLeft","stopPad","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c86845c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport function Pad ({padRef, onRightClick, onLeftClick, onMouseOver}){\r\n\r\n\r\n    return <> \r\n        <div ref={padRef} className=\"padControl\" id='padControl'></div>\r\n        {/* <button className='btn btn-outline-danger btn-sm' \r\n                id='controlButtons'\r\n                onMouseOver={onLeftClick}>\r\n                L\r\n        </button>\r\n        <button className='btn btn-outline-danger btn-sm' \r\n                id='controlButtons'\r\n                onMouseOver={onMouseOver}>\r\n                STOP\r\n        </button>\r\n        <button className='btn btn-outline-danger btn-sm' \r\n                id='controlButtons'\r\n                onMouseOver={onRightClick}>\r\n                    R\r\n        </button> */}\r\n\r\n     </>\r\n}\r\n\r\n\r\n","import React , {useRef, useEffect, Component} from 'react'\r\n\r\n\r\nexport function LaserContainer ({padRef, setLasers, score, setScore, lasersOnScreen,invaders }){\r\n    const laserRef = useRef(null)\r\n  \r\n    useEffect(()=>{\r\n        let timing = setInterval(moveLasers, 10);\r\n        \r\n        return () => clearInterval(timing);\r\n    },[lasersOnScreen])\r\n\r\n    const shootControl = function (e){\r\n        // console.log('yeah')\r\n        // console.log(e)\r\n        if ( e.code ==='Space'){\r\n            console.log('spaceBar')\r\n            handleCreateLaser()\r\n        } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        // console.log('add event listener shooting')\r\n        //add event listener\r\n        window.addEventListener('keyup', shootControl)\r\n        \r\n\r\n        //remove on cleanUp\r\n        return ()=>{\r\n            // console.log('removed')\r\n             window.removeEventListener('keyup', shootControl)\r\n        }\r\n    })\r\n\r\n   \r\n\r\n \r\n\r\n    class Laser extends Component {\r\n        constructor (padPosition){\r\n            super(padPosition)\r\n            // console.log(padPosition)\r\n            this.bottom = 90\r\n            this.left = parseInt(padPosition,10) +30\r\n            this.visual = document.createElement(\"div\")\r\n            const visual = this.visual\r\n            visual.classList.add('laser')\r\n            visual.style.left = this.left + 'px'\r\n            visual.style.bottom = this.bottom + 'px'\r\n            const targetedDiv = laserRef.current\r\n            targetedDiv.appendChild(visual)\r\n        }\r\n    }\r\n\r\n     \r\n    const moveLasers = function (){  \r\n        \r\n        lasersOnScreen.forEach(laser => {\r\n            \r\n          \r\n            let visual = laser.visual.style\r\n            laser.bottom += 3\r\n            visual.bottom = laser.bottom + 'px'\r\n            // console.log(laser)\r\n            // console.log(invaders)\r\n            invaders.forEach(invader => {\r\n                // console.log(invaders.indexOf(invader))\r\n                let invIndex = invaders.indexOf(invader)\r\n                let lasIndex = lasersOnScreen.indexOf(laser)\r\n                let invLeft = invader.left\r\n                let invBot = invader.bottom\r\n                let lasLeft = laser.left\r\n                let lasBot = laser.bottom\r\n                \r\n                if((lasLeft > invLeft -1 && lasLeft < invLeft +30)&&\r\n                   ( lasBot > invBot -5 && lasBot < invBot +20)\r\n                    )\r\n                    {\r\n                        invader.visual.classList.remove('alien')\r\n                        invaders.splice(invIndex,1)\r\n                        laser.visual.classList.remove('laser')\r\n                        lasersOnScreen.splice(lasIndex,1)\r\n                        setScore(score => score + 1)\r\n                    }\r\n            });\r\n\r\n            if(laser.bottom > 593){\r\n                lasersOnScreen[0].visual.classList.remove('laser')\r\n                lasersOnScreen.splice(0,1)\r\n            }\r\n        })\r\n    }\r\n\r\n \r\n  \r\n\r\n\r\n    const handleCreateLaser = function (){\r\n        // console.log('lasersOnScree : ',lasersOnScreen)\r\n        let newLaser = new Laser(padRef.current.style.left)\r\n        setLasers(lasersOnScreen =>[...lasersOnScreen, newLaser])\r\n        \r\n        // lasersOnScreen[0].hello()\r\n        \r\n    }\r\n   \r\n    \r\n    return <>\r\n        {/* <button className='btn btn-outline-success btn-sm'  id='shootButton'\r\n                onClick={handleCreateLaser}>\r\n                    shoot\r\n        </button> */}\r\n    <div ref={laserRef}> </div>\r\n    </>\r\n}\r\n\r\n\r\n","import React, { Component, useEffect, useRef} from'react'\r\nimport {useState} from 'react'\r\n\r\nexport function InvadersContainer ({ setAlienSpeed, alienSpeed, invaders, isGameOver,setGameOver, setInvaders}){\r\n    const [newSetOfAliens, setAliens] = useState (false)\r\n    // const[isGameOver, setGameOver] = useState(false)\r\n    // const newSetOfAliens = useRef(true)\r\n    const alienRef = useRef()\r\n    let timing\r\n    let count = useRef(0)\r\n    const [direction, setDirection] = useState(true)\r\n    \r\n    const toggleSetOfAliens = function (){\r\n        setAliens(newSetOfAliens => !newSetOfAliens)\r\n\r\n    }\r\n    const toggleDirection = function () {\r\n        setDirection(direction => !direction)\r\n      }\r\n    \r\n    \r\n\r\n\r\n    class aliens extends Component{\r\n\r\n        constructor (left, alienType){\r\n            super(left)\r\n            this.bottom = 500\r\n            this.left = left\r\n            this.visual = document.createElement(\"div\")\r\n            const visual = this.visual\r\n            visual.classList.add(alienType)\r\n            visual.style.left = this.left + 'px'\r\n            visual.style.bottom = this.bottom + 'px'\r\n            \r\n            const alienDiv = alienRef.current\r\n            alienDiv.appendChild(visual)            \r\n        }\r\n    }\r\n\r\n    const createAliens = function(space,numAliens, alienType){\r\n       \r\n        // clearInterval(timing)\r\n            setInvaders(()=> invaders=[])\r\n            let startPosition = 300 - (((numAliens*15) + (space*(numAliens-1))))/2\r\n        for (let i=0; i<numAliens;i++){\r\n            \r\n            let position = startPosition + i*(15+space)\r\n            let newInvader = new aliens(position, alienType)\r\n            setInvaders(invaders => [...invaders, newInvader])            \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (!isGameOver){\r\n            createAliens(40,7,'alien') \r\n            // createAliens(50,3,'alien')\r\n        }\r\n        setAlienSpeed(speed=> speed -1)\r\n\r\n    },[newSetOfAliens])\r\n\r\n\r\n    const moveAliens =  function(){\r\n        count.current++\r\n        if (count.current > 20){\r\n            toggleDirection()\r\n            count.current = 0\r\n        }\r\n        if(invaders.length === 0){\r\n            toggleSetOfAliens()\r\n        }\r\n        invaders.forEach(invader => {\r\n            let visual = invader.visual.style\r\n            invader.bottom -= 1\r\n            direction ? invader.left -= 1 : invader.left += 1\r\n            visual.bottom = invader.bottom + 'px'\r\n            visual.left = invader.left + 'px'\r\n\r\n            if(invader.bottom <30){\r\n                invader.visual.classList.remove('alien')\r\n                invaders.splice(invaders.indexOf(invader),1)\r\n                if(invaders.length === 0){\r\n                    setGameOver(true)\r\n                    setAlienSpeed(()=>25)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (!isGameOver){timing = setInterval(moveAliens, alienSpeed);}        \r\n        return () => clearInterval(timing);\r\n    },[createAliens])\r\n\r\n\r\n    return <div ref={alienRef}>\r\n        {isGameOver && <h1 className='gameTitle gameOver '>GAME OVER !!!</h1> }\r\n        {/* <button  onClick={createAliens}>c</button> */}\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport function Score ({score}){\r\n\r\n\r\n    return <div id='score' className='scoreTitle mt-2'>SCORE : {score}</div>\r\n}","import React, { useRef, Component, useEffect, useState } from 'react'\r\n\r\nexport function Background (){\r\n    const starRef = useRef()\r\n    const [starsOnScreen, setStar] = useState([])\r\n    const [togglerCreateStars, setToggleCreateStars] = useState(false)\r\n    const timing = useRef()\r\n    // let timing\r\n    class Stars extends Component{\r\n\r\n        constructor (left){\r\n            super(left)\r\n            this.bottom = -10\r\n            this.left = Math.floor(Math.random()*600)\r\n            this.visual = document.createElement(\"div\")\r\n            const visual = this.visual\r\n            visual.classList.add('star')\r\n            visual.style.left = this.left + 'px'\r\n            visual.style.bottom = this.bottom +  'px'\r\n            \r\n            const starDiv = starRef.current\r\n            starDiv.appendChild(visual)            \r\n        }\r\n\r\n    }\r\n\r\n    const createStars = function(numStars){\r\n        for (let i=0; i<numStars;i++){            \r\n            let newStar = new Stars()\r\n            setStar(starsOnScreen => [...starsOnScreen, newStar])       \r\n        }\r\n    }\r\n\r\n    const toggleSetOfStars = function (){\r\n        // console.log('togglerCreateStars', togglerCreateStars)\r\n        setToggleCreateStars(togglerCreateStars => !togglerCreateStars)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // console.log('ok cerate stars')\r\n        createStars(1)\r\n    },[togglerCreateStars])\r\n\r\n    useEffect(()=>{\r\n        let createAlienTimer = setInterval(toggleSetOfStars,120)\r\n        return () => clearInterval(createAlienTimer);\r\n    },[])\r\n\r\n\r\n\r\n    const moveStars = function(){\r\n\r\n        starsOnScreen.forEach(star => {\r\n            \r\n            let visual = star.visual.style      \r\n            star.bottom -= 2\r\n            visual.bottom = star.bottom + 'px'\r\n            if(star.bottom <-600){\r\n                star.visual.classList.remove('star')\r\n                starsOnScreen.splice(starsOnScreen.indexOf(star),1)\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n        timing.current = setInterval(moveStars, 10)\r\n        \r\n        return () => clearInterval(timing.current);\r\n    },[createStars])\r\n\r\n    return <div ref={starRef} ></div>\r\n}","import React, { useEffect } from 'react'\r\nimport {useState} from 'react'\r\n\r\n\r\nexport function Player({onSubmit, score, deletePlayer, setScore, setGameOver, players, fetchPlayers}) {\r\n\r\n    const [isNameSubmited, setIsNameSubmited] = useState(false)\r\n\r\n    const handleSubmit = async function(e){\r\n        e.preventDefault()\r\n        const form = e.target \r\n        const data = Object.fromEntries(new FormData(form))\r\n        data.score = score\r\n\r\n        // find worst \r\n        // if (players) {\r\n        //     let lowestScore = players[0].score\r\n        //     let worstPlayer = players[0]  \r\n        //         for (let i=1; i < players.length;i++){\r\n        //             if(players[i].score < lowestScore){\r\n        //             worstPlayer = players[i]\r\n        //             lowestScore = players[i].score\r\n        //         }\r\n        //     }\r\n        // } \r\n\r\n\r\n        const insertScore = async function (){\r\n            try { \r\n                await onSubmit(data)\r\n                fetchPlayers();\r\n                let timer = setInterval(()=> {\r\n                    setIsNameSubmited(()=> true)\r\n                    clearInterval(timer)\r\n                },100)               \r\n            } catch (error) {\r\n                throw error\r\n            } \r\n        }\r\n\r\n        insertScore()\r\n\r\n        // if(players.length >3){\r\n\r\n\r\n        //     if(data.score < lowestScore){\r\n        //         setIsNameSubmited(()=> true)\r\n        //     } else {\r\n        //         deletePlayer(worstPlayer)\r\n        //         insertScore()\r\n        //     }\r\n        //     // data.score < lowestScore ? setIsNameSubmited(()=> true) : insertScore()\r\n        \r\n        // } else if (players.length <=3)insertScore()\r\n    }\r\n\r\n    const handleClick = ()=>{\r\n        setScore(()=> 0)\r\n        setGameOver(()=> false)\r\n    }\r\n \r\n    return <>\r\n    {!isNameSubmited ? \r\n    <form className='player' onSubmit ={handleSubmit}>\r\n        <label className='name' htmlFor='player'>ENTER YOUR NAME  :</label><br/>\r\n        <input type = 'text' className='playerInput' name ='name'/><br/>\r\n        <button className='sendButton mt-2' htmltype = 'submit'> SEND</button>\r\n    </form> : \r\n    <div >        \r\n        <HallOfFame players={players} handleClick={handleClick}/>       \r\n    </div>\r\n    }\r\n    </>\r\n}\r\n\r\nconst HallOfFame = function({players, handleClick}){\r\n\r\n    return <>\r\n        <div class=\"table\">\r\n            <h2>hall of fame</h2>\r\n            <ul>\r\n                {players.map( player =>\r\n                    <li>\r\n                        <span>{player.name}</span><span className='scored'>{player.score}</span>\r\n                    </li>              \r\n                )} \r\n            </ul>\r\n            <button\r\n            className='btn btn-outline-danger btn-sm mt-2' \r\n            onClick={handleClick}>PLAY AGAIN\r\n            </button>\r\n        </div>\r\n\r\n    {/* <div className='hallOfFame'>\r\n   \r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan ='3'>HALL OF FAME</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {players.map( player => \r\n                <tr>\r\n                    <td>{player.name}</td>.....<td>{player.score} KILLS</td>\r\n                </tr>)\r\n                }   \r\n            </tbody>\r\n        </table> \r\n        <div>               \r\n             <button\r\n            className='btn btn-outline-danger btn-sm mt-2' \r\n            onClick={handleClick}>PLAY AGAIN\r\n            </button>              \r\n        </div>\r\n    </div> */}\r\n        \r\n    </>\r\n }\r\n\r\n","import React, { useEffect, useRef, useState} from 'react';\r\nimport { Pad } from './gameElements/Pad';\r\nimport {LaserContainer} from './gameElements/laser'\r\n// import {handleCreateLaser} from './gameElements/laser'\r\nimport {InvadersContainer} from './gameElements/Aliens'\r\nimport { Score } from './gameElements/Score';\r\nimport { Background } from './gameElements/Background';\r\nimport { Player } from './gameElements/Player';\r\nimport { usePlayer } from './hooks/players';\r\n\r\n\r\nlet rightTimerId;\r\nlet leftTimerId;\r\nlet isGoingRight = false;\r\nlet isGoingLeft = false;\r\n\r\nexport function MainGameContainer (){\r\n    \r\n    const padRef = useRef(null);\r\n    const stepsToRight = useRef(0);\r\n    const [lasersOnScreen, setLasers] = useState([]);\r\n    const [invaders, setInvaders]  =useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const[isGameOver, setGameOver] = useState(false);\r\n    // const [player, setPlayer] = useState(null);\r\n    const {players, fetchPlayers, deletePlayer,addPlayer} = usePlayer()\r\n    const [alienSpeed, setAlienSpeed] = useState(20)\r\n    \r\n    useEffect(()=>{\r\n        // console.log('ok render')\r\n        MovePadRight()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        fetchPlayers()\r\n    },[])\r\n\r\n    const control = function (e){\r\n        if ( e.key ==='ArrowLeft'){\r\n            MovePadLeft()\r\n        } else if (e.key === 'ArrowRight'){\r\n            console.log('going right with key')\r\n            MovePadRight()\r\n        } \r\n        else if (e.key === 'ArrowUp'){\r\n            stopPad()\r\n        } \r\n    }\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        console.log('add event listener for key control')\r\n        //add event listener\r\n        window.addEventListener('keyup', control)\r\n\r\n        //remove on cleanUp\r\n        return ()=>{\r\n             window.removeEventListener('keyup', control)\r\n        }\r\n    },[])\r\n    \r\n\r\n    // ------------DEPLACEMENT PAD -----------------//\r\n\r\n    const stopPad = function (){\r\n        // console.log('ok stop pad')\r\n        clearInterval(rightTimerId)\r\n        clearInterval(leftTimerId)\r\n        isGoingRight = false;\r\n        isGoingLeft =false;\r\n    };\r\n\r\n\r\n    const shoot = function (){\r\n        stopPad()\r\n    }\r\n    \r\n    const MovePadRight = function(){ \r\n        // console.log('move right',padRef.current.style.left)\r\n            isGoingLeft=false;\r\n            clearInterval(leftTimerId)\r\n\r\n            if(!isGoingRight){\r\n                \r\n                rightTimerId = setInterval(()=>{\r\n                    isGoingRight = true;\r\n                    stepsToRight.current += 2;\r\n                    padRef.current.style.left = stepsToRight.current + 'px'\r\n                    // console.log(parseInt(padRef.current.style.left,10))\r\n                    if( parseInt(padRef.current.style.left,10) > 534){\r\n                        stopPad()\r\n                    }\r\n                \r\n                },10)\r\n            }\r\n    }\r\n\r\n    const MovePadLeft = function(){ \r\n        // console.log('move left',padRef.current.style.left)\r\n        isGoingRight = false;\r\n        // console.log('isGoingLeft : ', isGoingLeft)\r\n        clearInterval(rightTimerId)\r\n        if(!isGoingLeft){\r\n            leftTimerId = setInterval(()=>{\r\n                isGoingLeft = true;\r\n                \r\n                stepsToRight.current -= 2;\r\n                padRef.current.style.left = stepsToRight.current + 'px'\r\n                // console.log(padRef.current.style.left)\r\n                if( parseInt(padRef.current.style.left,10) <=0){\r\n                    stopPad()\r\n                }\r\n            \r\n            },10)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // ------------RENDER  -----------------//\r\n    return <>\r\n            <Score score={score}/>\r\n            \r\n            {/* <Route path = */}\r\n        <div>\r\n            { isGameOver ?<Player \r\n            onSubmit={addPlayer} \r\n            deletePlayer={deletePlayer} \r\n            setScore={setScore} \r\n            score={score} \r\n            setGameOver={setGameOver} \r\n            players={players} \r\n            fetchPlayers={fetchPlayers}/> : null}\r\n        </div>\r\n        <div>\r\n            <InvadersContainer \r\n            alienSpeed={alienSpeed}\r\n            setAlienSpeed={setAlienSpeed}\r\n            padRef={padRef} \r\n            invaders={invaders} \r\n            setInvaders={setInvaders}\r\n            isGameOver={isGameOver}\r\n            setGameOver={setGameOver}\r\n            />\r\n        </div>\r\n        <div id='pad'>\r\n            <LaserContainer \r\n            padRef={padRef} \r\n            setScore={setScore} \r\n            score={score} \r\n            invaders={invaders} \r\n            setLasers={setLasers} \r\n            lasersOnScreen={lasersOnScreen} \r\n             />\r\n        </div>\r\n        <div id='pad'>\r\n            <Pad \r\n            padRef={padRef} \r\n            onRightClick={MovePadRight} \r\n            onLeftClick={MovePadLeft} \r\n            onMouseOver={shoot}/>       \r\n        </div>\r\n        <div className='animatedBackground'>\r\n            <Background/>\r\n        </div>\r\n        </>\r\n}\r\n\r\n\r\n\r\n\r\n      \r\n","\r\nexport class ApiErrors{\r\n    constructor (errors){\r\n        this.errors = errors;\r\n    }\r\n\r\n}\r\n\r\nexport async function apiFetch(endpoint, options ={}){\r\n    options = {\r\n        // credentials : 'include',\r\n        headers : {\r\n            Accept : 'application/json',\r\n            \r\n        },\r\n        ...options\r\n    }\r\n\r\n    if(options.body !== null && typeof options.body ==='object' && !(options.body instanceof FormData)) {\r\n        options.body = JSON.stringify(options.body)\r\n        options.headers['Content-Type'] =  'application/json'\r\n    }\r\n    const response = await fetch ('http://localhost:8080' + endpoint, options)\r\n    if(response.status === 204){\r\n        console.log('ok 204')\r\n        return null;\r\n    }\r\n    const responseData = await response.json();\r\n    if(response.ok){\r\n        console.log('oke response data')\r\n        return responseData;\r\n        \r\n    } else {\r\n        if(responseData.errors){\r\n            throw new ApiErrors(responseData.errors);\r\n        }\r\n\r\n    }\r\n\r\n}","import React, { useReducer } from 'react'\r\nimport { apiFetch } from '../utils/apiFetch'\r\n\r\nfunction reducer (state, action){\r\n    // console.log('CARS REDUCER', action.type, action)\r\n    switch(action.type){\r\n        case 'FETCHING_PLAYERS' :\r\n            return {...state}\r\n\r\n        case 'SET_PLAYERS' : \r\n            return {...state, players : action.payload }\r\n\r\n        case 'ADD_PLAYER':\r\n            return {...state, players: action.payload}\r\n        \r\n        case 'DELETE_PLAYER' :\r\n            return {...state, players : state.players.filter(player => (player !== action.payload)) }\r\n    }\r\n}\r\n// cars : state.cars.filter(c => (c !== action.payload))}\r\n\r\n\r\n\r\nexport function usePlayer(){\r\n    const[state, dispatch] = useReducer(reducer, {\r\n        players : null,\r\n        \r\n    })\r\n\r\n    return {\r\n        \r\n        players : state.players,\r\n        // score : state.score,\r\n        \r\n        addPlayer : async function(data){\r\n            // console.log('player dans le hook', data)\r\n            const player = await apiFetch('/players', {\r\n                method : 'post',\r\n                body : data\r\n            })\r\n            // console.log('state.name', state.players)\r\n            // console.log('state : ', state)\r\n            dispatch({type : 'ADD_PLAYER', payload : player})\r\n\r\n        \r\n        },\r\n        fetchPlayers : async function (){\r\n                // const players = await apiFetch('/players')\r\n                const players = await apiFetch('/players')\r\n                console.log( 'players', players)\r\n                dispatch({type : 'FETCHING_PLAYERS'})\r\n                // const players = await apiFetch('/players')\r\n                dispatch({type : 'SET_PLAYERS', payload : players})\r\n\r\n            \r\n        },\r\n        deletePlayer : async function(worstPlayer){\r\n            await apiFetch('/players/' + worstPlayer._id,{\r\n                method : 'DELETE'\r\n            })\r\n            dispatch({type : 'DELETE_PLAYER', payload : worstPlayer}) \r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// dispatch({type : 'FETCHING_CARS'})\r\n// const cars = await apiFetch('/cars')\r\n// dispatch({type : 'SET_CARS', payload : cars})\r\n","import React from 'react';\nimport { MainGameContainer } from './MainGameContainer';\n\nfunction App() {\n  \n  return (\n    <><h2 className='gameTitle'>-----SPACE INVADERS-----</h2>\n    <div  className='mainGame' >\n      \n      <MainGameContainer />\n    </div>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}